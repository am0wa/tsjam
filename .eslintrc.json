{
  "parserOptions": { "project": "./tsconfig.json" },
  "ignorePatterns": ["node_modules", "lib", "docs", "*.js"],
  "plugins": ["functional"],
  "extends": [
    "@tsjam/eslint-config-recommended",
    "plugin:import/typescript",
    "plugin:functional/lite"
  ],
  "globals": { "BigInt": true, "console": true, "WebAssembly": true },
  "rules": {
    "@typescript-eslint/member-ordering": 0,
    "@typescript-eslint/no-redeclare": 0,
    "@typescript-eslint/naming-convention": 0,
    "@typescript-eslint/no-unsafe-member-access": 0,
    "@typescript-eslint/no-unsafe-call" : 0, // concerns on '.this' invocations((
    // Makes no sense to allow type inferrence for expression parameters, but require typing the response
    "@typescript-eslint/explicit-function-return-type": [
      "error",
      { "allowExpressions": true, "allowTypedFunctionExpressions": true }
    ],
    "@typescript-eslint/prefer-readonly": "error",
    /*"@typescript-eslint/prefer-readonly-parameter-types": "error",*/  // functional/prefer-readonly-type is more configurable
    "object-curly-spacing": ["error", "always"],
    "operator-linebreak": ["error", "before"],
    "spaced-comment": ["error", "always", { "exceptions": ["-", "+"] }],
    "eslint-comments/disable-enable-pair": [
      "error",
      { "allowWholeFile": true }
    ],
    "import/order": [
      "error",
      { "newlines-between": "always", "alphabetize": { "order": "asc" } }
    ],
    "sort-imports": [
      "error",
      { "ignoreDeclarationSort": true, "ignoreCase": true }
    ],
    "no-new-object": "error",
    "prefer-destructuring": "warn",
    "no-restricted-imports": ["error", {
      // don't import from dist / use absolute imports / avoid parent imports
      "patterns": ["../lib/*", "../src/*", "../../*"]
    }],
    "functional/no-class": 0,
    "functional/functional-parameters": 0,
    "functional/no-method-signature": 0,
    "functional/prefer-type-literal": 0,
    "functional/no-this-expression": 0,
    "functional/no-throw-statement": 0,
    "functional/no-return-void": 0,
    "functional/no-mixed-type": 0,
    "functional/immutable-data": ["error", { "ignoreAccessorPattern": "**._*" }],  // allow to mutate private fields
    "functional/prefer-readonly-type": ["error", { "ignorePattern": "^.*_" }]  // allow to mutate private fields
  },
  "overrides": [
    {
      "files": ["./*.js"],
      "excludedFiles": "*.config.js"
    }
  ]
}
